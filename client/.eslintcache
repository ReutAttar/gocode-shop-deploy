[{"C:\\gocode\\gocode-shop-server\\client\\src\\index.js":"1","C:\\gocode\\gocode-shop-server\\client\\src\\reportWebVitals.js":"2","C:\\gocode\\gocode-shop-server\\client\\src\\App.js":"3","C:\\gocode\\gocode-shop-server\\client\\src\\pages\\About.js":"4","C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\ThemeContext.js":"5","C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\SaleContext.js":"6","C:\\gocode\\gocode-shop-server\\client\\src\\pages\\ProductPage\\ProductPage.js":"7","C:\\gocode\\gocode-shop-server\\client\\src\\components\\SaleCountDown\\SaleCountDown.js":"8","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Products\\Products.js":"9","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Header\\Header.js":"10","C:\\gocode\\gocode-shop-server\\client\\src\\constants.js":"11","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Product\\Product.js":"12","C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\AdminContext.js":"13","C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\ProductsContext.js":"14","C:\\gocode\\gocode-shop-server\\client\\src\\pages\\Home\\Home.js":"15","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Popups\\Login\\LoginPopup.js":"16","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Popups\\Update\\UpdatePopup.js":"17","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Popups\\Add\\AddPopup.js":"18","C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\CartAmountContext.js":"19","C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\CartContext.js":"20","C:\\gocode\\gocode-shop-server\\client\\src\\pages\\Cart\\Cart.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":14850,"mtime":1618778436301,"results":"25","hashOfConfig":"23"},{"size":92,"mtime":1613483398884,"results":"26","hashOfConfig":"23"},{"size":301,"mtime":1614541721758,"results":"27","hashOfConfig":"23"},{"size":113,"mtime":1616664270126,"results":"28","hashOfConfig":"23"},{"size":4550,"mtime":1618766169291,"results":"29","hashOfConfig":"23"},{"size":2243,"mtime":1613904584027,"results":"30","hashOfConfig":"23"},{"size":1039,"mtime":1614806021192,"results":"31","hashOfConfig":"23"},{"size":2957,"mtime":1618764220154,"results":"32","hashOfConfig":"23"},{"size":115,"mtime":1618409820578,"results":"33","hashOfConfig":"23"},{"size":3247,"mtime":1617560162261,"results":"34","hashOfConfig":"23"},{"size":115,"mtime":1616525721609,"results":"35","hashOfConfig":"23"},{"size":119,"mtime":1617558799050,"results":"36","hashOfConfig":"23"},{"size":2968,"mtime":1618764219783,"results":"37","hashOfConfig":"23"},{"size":2402,"mtime":1617904779566,"results":"38","hashOfConfig":"23"},{"size":4169,"mtime":1618764995441,"results":"39","hashOfConfig":"23"},{"size":4316,"mtime":1617713649160,"results":"40","hashOfConfig":"23"},{"size":125,"mtime":1617914413585,"results":"41","hashOfConfig":"23"},{"size":113,"mtime":1618156756806,"results":"42","hashOfConfig":"23"},{"size":2662,"mtime":1618778447067,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"vh18v7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\gocode\\gocode-shop-server\\client\\src\\index.js",[],["92","93"],"C:\\gocode\\gocode-shop-server\\client\\src\\reportWebVitals.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\App.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\pages\\About.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\ThemeContext.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\SaleContext.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\pages\\ProductPage\\ProductPage.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\components\\SaleCountDown\\SaleCountDown.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\components\\Products\\Products.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\components\\Header\\Header.js",["94"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MY_APP_NAME } from \"../../constants\";\r\nimport { Slider } from \"antd\";\r\nimport ThemeContext from \"../../contexts/ThemeContext\";\r\n\r\nconst Header = ({ categories, selectedFilter, selectedRange, MIN, MAX }) => {\r\n  const [minPrice, setMinPrice] = useState(MIN);\r\n  const [maxPrice, setMaxPrice] = useState(MAX);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  function onChange(value) {\r\n    // console.log(\"onChange: \", value);\r\n    const [min, max] = value;\r\n    setMaxPrice(max);\r\n    setMinPrice(min);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (MIN !== 0 && MAX !== 0) {\r\n  //     setMinPrice(MIN);\r\n  //     setMaxPrice(MAX);\r\n  //   }\r\n  // }, [MAX, MIN]);\r\n\r\n  function onAfterChange(value) {\r\n    selectedRange(value);\r\n  }\r\n  return (\r\n    <nav className=\"product-filter\" style={{ background: theme.background }}>\r\n      <h1 id=\"appTitle\" style={{ color: theme.foreground }}>\r\n        {MY_APP_NAME}\r\n      </h1>\r\n      <div className=\"filters\">\r\n        <div className=\"sort\">\r\n          <div className=\"collection-sort\">\r\n            <label style={{ color: theme.foreground }}>Filter by:</label>\r\n            <select onChange={(event) => selectedFilter(event.target.value)}>\r\n              <option value=\"All\">All</option>\r\n              {categories.map((category) => (\r\n                <option value={category} key={categories.indexOf(category)}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"collection-sort\">\r\n            <label style={{ color: theme.foreground }}>Sort by:</label>\r\n            <select>\r\n              <option value=\"/\">Featured</option>\r\n              <option value=\"/\">Best Selling</option>\r\n              <option value=\"/\">Alphabetically, A-Z</option>\r\n              <option value=\"/\">Alphabetically, Z-A</option>\r\n              <option value=\"/\">Price, low to high</option>\r\n              <option value=\"/\">Price, high to low</option>\r\n              <option value=\"/\">Date, new to old</option>\r\n              <option value=\"/\">Date, old to new</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slider\" style={{ color: theme.foreground }}>\r\n          <Slider\r\n            range\r\n            defaultValue={[minPrice, maxPrice]}\r\n            max={MAX}\r\n            min={MIN}\r\n            onAfterChange={onAfterChange}\r\n            onChange={onChange}\r\n          />\r\n          <div className=\"price-label\">\r\n            <span className=\"from\">{`${minPrice}$`}</span> - <span className=\"to\">{`${maxPrice}$`}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.propTypes = {\r\n  categories: PropTypes.array,\r\n  selectFilter: PropTypes.func,\r\n};\r\n\r\nexport default Header;\r\n","C:\\gocode\\gocode-shop-server\\client\\src\\constants.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\components\\Product\\Product.js",["95"],"import React, { useContext, useState } from \"react\";\r\nimport \"./Product.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ThemeContext from \"../../contexts/ThemeContext\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport AdminContext from \"../../contexts/AdminContext\";\r\nimport UpdatePopup from \"../Popups/Update/UpdatePopup\";\r\nimport Swal from \"sweetalert2\";\r\nimport ProductsContext from \"../../contexts/ProductsContext\";\r\n\r\nconst Product = ({ sale, image, title, price, id }) => {\r\n  const [admin] = useContext(AdminContext);\r\n  const theme = useContext(ThemeContext);\r\n  const [showUpdatePopup, setShowUpdatePopup] = useState(false);\r\n  const [products, setProducts] = useContext(ProductsContext);\r\n\r\n  const deleteProduct = async () => {\r\n    const res = await fetch(`/api/products/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      // body: JSON.stringify(product),\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (data) {\r\n      setProducts(data);\r\n      Swal.fire(\"Deleted!\", \"The product has been deleted.\", \"success\");\r\n    } else {\r\n      console.log(\"ERROR DELETE\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-card\" style={{ background: theme.background }}>\r\n      {admin && (\r\n        <div className=\"adminButtons\">\r\n          <button\r\n            className=\"deleteProduct\"\r\n            onClick={() =>\r\n              Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\",\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  deleteProduct();\r\n                }\r\n              })\r\n            }\r\n          >\r\n            <DeleteOutlined />\r\n          </button>\r\n          <button className=\"updateProduct\" onClick={() => setShowUpdatePopup(true)}>\r\n            <EditOutlined />\r\n          </button>\r\n          {showUpdatePopup && (\r\n            <UpdatePopup\r\n              id={id}\r\n              closePopup={() => {\r\n                setShowUpdatePopup(false);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      {sale && <span className=\"onSale-label\">SALE</span>}\r\n      <div className=\"product-image\">\r\n        <Link to={`/products/${id}`}>\r\n          <img src={image} alt=\"productImg\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"product-info\">\r\n        <Link to={`/products/${id}`}>\r\n          <h5 style={{ color: theme.foreground }}>{title}</h5>\r\n        </Link>\r\n        {sale ? (\r\n          <div>\r\n            <span className={\"sale-price\"}>{price * (50 / 100)}$</span>\r\n            <span className={\"normal-price\"}>{price}$</span>\r\n          </div>\r\n        ) : (\r\n          <h6>{price}$</h6>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  sale: PropTypes.bool,\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  price: PropTypes.number,\r\n};\r\n\r\nexport default Product;\r\n","C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\AdminContext.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\ProductsContext.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\pages\\Home\\Home.js",["96"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Products from \"../../components/Products/Products\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport SaleCountDown from \"../../components/SaleCountDown/SaleCountDown\";\r\nimport SaleContext from \"../../contexts/SaleContext\";\r\nimport ProductsContext from \"../../contexts/ProductsContext\";\r\nimport AdminContext from \"../../contexts/AdminContext\";\r\nimport \"./Home.css\";\r\nimport AddPopup from \"../../components/Popups/Add/AddPopup\";\r\n\r\nconst Home = () => {\r\n  const [products, setProducts] = useContext(ProductsContext);\r\n  const [categories, setCategories] = useState([]);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const [priceRange, setPriceRange] = useState([0, 1000]);\r\n  const [minPrice, setMinPrice] = useState(0);\r\n  const [maxPrice, setMaxPrice] = useState(1000);\r\n  // const [sale, setSale] = useState(true);\r\n  const [sale, setSale] = useContext(SaleContext);\r\n  const [admin, setAdmin] = useContext(AdminContext);\r\n  const [showAddPopup, setShowAddPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await fetch(\"/api/products\", {\r\n        method: \"GET\", // or 'PUT'\r\n        headers: {\r\n          \"Content-Type\": \"text/html\",\r\n        },\r\n      }); //\"https://fakestoreapi.com/products\");\r\n      const json = await res.json();\r\n      setProducts(json);\r\n    }\r\n\r\n    fetchData();\r\n  }, [setProducts]);\r\n\r\n  useEffect(() => {\r\n    const groupBy = (xs, key) =>\r\n      xs.reduce((rv, x) => {\r\n        rv[x[key]] = true || [];\r\n        return rv;\r\n      }, {});\r\n    setCategories(Object.keys(groupBy(products, \"category\")));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      setMinPrice(Math.floor(Math.min(...products.map(({ price }) => price))));\r\n      setMaxPrice(Math.ceil(Math.max(...products.map(({ price }) => price))));\r\n    }\r\n  }, [products]);\r\n\r\n  // useEffect(() => {\r\n  //   if ((minPrice !== 0) & (maxPrice !== 0)) {\r\n  //     setPriceRange([minPrice, maxPrice]);\r\n  //   }\r\n  //   // console.log(priceRange);\r\n  //   // console.log(minPrice);\r\n  // }, [maxPrice, minPrice]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SaleCountDown onFinish={setSale} />\r\n      <Header\r\n        selectedFilter={setFilter}\r\n        categories={categories}\r\n        selectedRange={setPriceRange}\r\n        // priceRange={priceRange}\r\n        MIN={minPrice}\r\n        MAX={maxPrice}\r\n      />\r\n      {admin && (\r\n        <div className=\"addProduct-div\">\r\n          <button className=\"addProduct-button\" onClick={() => setShowAddPopup(true)}>\r\n            Add Product\r\n          </button>\r\n          {showAddPopup && (\r\n            <AddPopup\r\n              closePopup={() => {\r\n                setShowAddPopup(false);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      <Products sale={sale} filter={filter} products={products} priceRange={priceRange} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Popups\\Login\\LoginPopup.js",["97"],"import React, { useContext, useState } from \"react\";\r\nimport \"./LoginPopup.css\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport AdminContext from \"../../../contexts/AdminContext\";\r\n\r\nconst LoginPopup = ({ closePopup }) => {\r\n  const [inputEmail, setInputEmail] = useState(\"\");\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [admin, setAdmin] = useContext(AdminContext);\r\n\r\n  const login = async (email, password, close) => {\r\n    const res = await fetch(\"/api/login\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: email, password: password }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (data) {\r\n      if (data.errorMessage) {\r\n        setErrorMessage(data.errorMessage);\r\n        setIsError(true);\r\n      } else {\r\n        setAdmin(true);\r\n        setIsError(false);\r\n        setTimeout(close(), 60000);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup_inner\">\r\n        <button className=\"close\" onClick={closePopup}>\r\n          <CloseOutlined />\r\n        </button>\r\n        <div className=\"login\">\r\n          <h1>Login As Admin</h1>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Email\"\r\n              value={inputEmail}\r\n              onChange={(e) => setInputEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={inputPassword}\r\n              onChange={(e) => setInputPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n            <div className=\"submitDiv\">\r\n              <button\r\n                className=\"submit\"\r\n                onClick={() => {\r\n                  login(inputEmail, inputPassword, closePopup);\r\n                  //   setInputEmail(\"\");\r\n                  //   setInputPassword(\"\");\r\n                }}\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n            {isError && <h3 style={{ color: \"red\" }}>{errorMessage}</h3>}\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPopup;\r\n","C:\\gocode\\gocode-shop-server\\client\\src\\components\\Popups\\Update\\UpdatePopup.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\components\\Popups\\Add\\AddPopup.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\CartAmountContext.js",[],["98","99"],"C:\\gocode\\gocode-shop-server\\client\\src\\contexts\\CartContext.js",[],"C:\\gocode\\gocode-shop-server\\client\\src\\pages\\Cart\\Cart.js",["100","101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":29,"nodeType":"110","messageId":"111","endLine":1,"endColumn":38},{"ruleId":"108","severity":1,"message":"112","line":16,"column":10,"nodeType":"110","messageId":"111","endLine":16,"endColumn":18},{"ruleId":"108","severity":1,"message":"113","line":20,"column":17,"nodeType":"110","messageId":"111","endLine":20,"endColumn":25},{"ruleId":"108","severity":1,"message":"114","line":11,"column":10,"nodeType":"110","messageId":"111","endLine":11,"endColumn":15},{"ruleId":"104","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"108","severity":1,"message":"117","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":14},{"ruleId":"108","severity":1,"message":"118","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":12},{"ruleId":"108","severity":1,"message":"119","line":10,"column":16,"nodeType":"110","messageId":"111","endLine":10,"endColumn":23},{"ruleId":"108","severity":1,"message":"120","line":11,"column":20,"nodeType":"110","messageId":"111","endLine":11,"endColumn":31},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'products' is assigned a value but never used.","'setAdmin' is assigned a value but never used.","'admin' is assigned a value but never used.",["121"],["122"],"'Card' is defined but never used.","'Meta' is defined but never used.","'setCart' is assigned a value but never used.","'setProducts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]